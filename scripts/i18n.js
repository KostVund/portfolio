// –û—Å–Ω–æ–≤–Ω—ã–µ —è–∑—ã–∫–∏ —Å–∞–π—Ç–∞
const languages = [
    { code: 'ru', name: '–†—É—Å—Å–∫–∏–π', flag: 'üá∑üá∫' },
    { code: 'uk', name: '–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞', flag: 'üá∫üá¶' },
    { code: 'en', name: 'English', flag: 'üá¨üáß' },
    { code: 'de', name: 'Deutsch', flag: 'üá©üá™' },
    { code: 'es', name: 'Espa√±ol', flag: 'üá™üá∏' },
    { code: 'pt', name: 'Portugu√™s', flag: 'üáµüáπ' },
    { code: 'ja', name: 'Êó•Êú¨Ë™û', flag: 'üáØüáµ' }
];

// –¢–µ–∫—É—â–∏–π —è–∑—ã–∫ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é - —Ä—É—Å—Å–∫–∏–π –∏–ª–∏ –∏–∑ localStorage)
let currentLanguage = localStorage.getItem('language') || 'ru';

// –≠–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–≤–µ—Å—Ç–∏
const translatableElements = [
    // –ù–∞–≤–∏–≥–∞—Ü–∏—è
    { selector: '.nav-link[href="#home"]', key: 'nav.home' },
    { selector: '.nav-link[href="#about"]', key: 'nav.about' },
    { selector: '.nav-link[href="#projects"]', key: 'nav.projects' },
    { selector: '.nav-link[href="#contact"]', key: 'nav.contact' },
    
    // Hero —Å–µ–∫—Ü–∏—è
    { selector: '.hero-subtitle', key: 'hero.subtitle' },
    { selector: '.hero-text', key: 'hero.description' },
    { selector: '.hero-buttons .btn-primary', key: 'hero.contactBtn' },
    { selector: '.hero-buttons .btn-outline', key: 'hero.downloadBtn' },
    
    // About —Å–µ–∫—Ü–∏—è
    { selector: '#about .section-title', key: 'about.title' },
    { selector: '.about-text h3:first-of-type', key: 'about.whoAmI' },
    { selector: '.text-content p:nth-child(1)', key: 'about.bio1' },
    { selector: '.text-content p:nth-child(2)', key: 'about.bio2' },
    { selector: '.text-content p:nth-child(3)', key: 'about.bio3' },
    { selector: '.about-text h3:nth-of-type(2)', key: 'about.languages' },
    { selector: '.language-item:nth-child(1) .language-name', key: 'about.languageRussian', append: ':' },
    { selector: '.language-item:nth-child(2) .language-name', key: 'about.languageUkrainian', append: ':' },
    { selector: '.language-item:nth-child(3) .language-name', key: 'about.languageGerman', append: ':' },
    { selector: '.language-item:nth-child(4) .language-name', key: 'about.languageEnglish', append: ':' },
    { selector: '.language-item:nth-child(1) .language-level', key: 'about.native' },
    { selector: '.language-item:nth-child(2) .language-level', key: 'about.native' },
    { selector: '.about-details h3:first-of-type', key: 'about.skills' },
    { selector: '.about-details h3:nth-of-type(2)', key: 'about.education' },
    
    // –û–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ - –¥–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—É–Ω–∫—Ç–∞
    { selector: '.education-item:nth-child(1) .education-info', key: 'about.edu2025' },
    { selector: '.education-item:nth-child(2) .education-info', key: 'about.edu2024' },
    { selector: '.education-item:nth-child(3) .education-info', key: 'about.edu2023_2024' },
    { selector: '.education-item:nth-child(4) .education-info', key: 'about.edu2020_2022' },
    { selector: '.education-item:nth-child(5) .education-info', key: 'about.edu2015_2020' },
    { selector: '.education-item:nth-child(6) .education-info', key: 'about.edu2010_2014' },
    
    // Projects —Å–µ–∫—Ü–∏—è
    { selector: '#projects .section-title', key: 'projects.title' },
    { selector: '#projects .section-description', key: 'projects.description' },
    { selector: '.project-card:nth-child(1) .project-title', key: 'projects.portfolioTitle' },
    { selector: '.project-card:nth-child(1) .project-description', key: 'projects.portfolioDesc' },
    { selector: '.project-card:nth-child(2) .project-title', key: 'projects.weatherTitle' },
    { selector: '.project-card:nth-child(2) .project-description', key: 'projects.weatherDesc' },
    { selector: '.project-card:nth-child(3) .project-title', key: 'projects.taskTitle' },
    { selector: '.project-card:nth-child(3) .project-description', key: 'projects.taskDesc' },
    { selector: '.view-more .btn-outline', key: 'projects.viewMore' },
    
    // Contact —Å–µ–∫—Ü–∏—è
    { selector: '#contact .section-title', key: 'contact.title' },
    { selector: '#contact .section-description', key: 'contact.description' },
    { selector: '.contact-info h3:first-of-type', key: 'contact.contactInfo' },
    { selector: '.contact-info h3:nth-of-type(2)', key: 'contact.socialMedia' },
    { selector: 'label[for="name"]', key: 'contact.formName' },
    { selector: 'label[for="email"]', key: 'contact.formEmail' },
    { selector: 'label[for="message"]', key: 'contact.formMessage' },
    { selector: '.submit-btn .btn-text', key: 'contact.formSubmit' },
    { selector: '.form-success p', key: 'contact.formSuccess' },
    { selector: '#sendAnotherBtn', key: 'contact.formAnother' },
    { selector: '#name', attr: 'placeholder', key: 'contact.namePlaceholder' },
    { selector: '#email', attr: 'placeholder', key: 'contact.emailPlaceholder' },
    { selector: '#message', attr: 'placeholder', key: 'contact.messagePlaceholder' },
    
    // Footer
    { selector: '.copyright', key: 'footer.rights', prepend: '&copy; <span id="year"></span> Kostiantyn Vundervald. ' }
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–µ—Ä–µ–≤–æ–¥–∞ –ø–æ –∫–ª—é—á—É
function getTranslation(key, lang) {
    const keys = key.split('.');
    let translation = window.translations[lang];
    
    for (const k of keys) {
        if (translation && translation[k]) {
            translation = translation[k];
        } else {
            return key; // –ï—Å–ª–∏ –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–∞–º –∫–ª—é—á
        }
    }
    
    return translation;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
function translatePage(lang) {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –≤ localStorage
    localStorage.setItem('language', lang);
    currentLanguage = lang;
    
    // –î–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å –¥–ª—è –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–µ—Ä–µ–≤–æ–¥–∞
    document.body.classList.add('translating');
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
    translatableElements.forEach(element => {
        const els = document.querySelectorAll(element.selector);
        if (els.length > 0) {
            els.forEach(el => {
                const translation = getTranslation(element.key, lang);
                
                if (element.attr) {
                    // –ü–µ—Ä–µ–≤–æ–¥ –∞—Ç—Ä–∏–±—É—Ç–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, placeholder)
                    el.setAttribute(element.attr, translation);
                } else {
                    // –ü–µ—Ä–µ–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ —ç–ª–µ–º–µ–Ω—Ç–∞
                    let text = translation;
                    if (element.prepend) {
                        text = element.prepend + text;
                    }
                    if (element.append) {
                        text = text + element.append;
                    }
                    el.innerHTML = text;
                }
            });
        }
    });
    
    // –£–¥–∞–ª—è–µ–º –∫–ª–∞—Å—Å –∞–Ω–∏–º–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    setTimeout(() => {
        document.body.classList.remove('translating');
    }, 500);
    
    // –û–±–Ω–æ–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–æ–∫ –≤ —Ñ–æ—Ä–º–µ
    window.formErrorMessages = {
        nameError: getTranslation('contact.nameError', lang),
        emailError: getTranslation('contact.emailError', lang),
        emailInvalid: getTranslation('contact.emailInvalid', lang),
        messageError: getTranslation('contact.messageError', lang),
        sending: getTranslation('contact.sending', lang)
    };
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤
    document.querySelectorAll('.language-item').forEach(item => {
        const itemLang = item.getAttribute('data-lang');
        if (itemLang === lang) {
            item.classList.add('active');
        } else {
            item.classList.remove('active');
        }
    });
    
    // –û–±–Ω–æ–≤–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–æ–º
    const currentLangIcon = document.querySelector('.current-language');
    if (currentLangIcon) {
        // –≠—Ñ—Ñ–µ–∫—Ç —Å–º–µ–Ω—ã —Ñ–ª–∞–≥–∞
        currentLangIcon.style.transform = 'scale(0.5)';
        currentLangIcon.style.opacity = '0';
        
        setTimeout(() => {
            currentLangIcon.textContent = getCurrentLanguageFlag();
            currentLangIcon.style.transform = 'scale(1)';
            currentLangIcon.style.opacity = '1';
        }, 150);
    }
    
    // –û–±–Ω–æ–≤–ª—è–µ–º HTML –∞—Ç—Ç—Ä–∏–±—É—Ç lang
    document.documentElement.lang = lang;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤
function createLanguageSwitcher() {
    const navbar = document.querySelector('.nav-menu');
    
    if (navbar) {
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è —è–∑—ã–∫–æ–≤
        const langContainer = document.createElement('li');
        langContainer.className = 'nav-item language-dropdown';
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –º–µ–Ω—é —è–∑—ã–∫–æ–≤
        const langButton = document.createElement('button');
        langButton.className = 'language-switcher';
        langButton.innerHTML = `<span class="current-language">${getCurrentLanguageFlag()}</span>`;
        langButton.setAttribute('aria-label', 'Switch language');
        langButton.title = '–ò–∑–º–µ–Ω–∏—Ç—å —è–∑—ã–∫ / Change language';
        
        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è —ç–º–æ–¥–∑–∏ —Ñ–ª–∞–≥–∞
        const centerFlag = () => {
            const flagElement = langButton.querySelector('.current-language');
            if (flagElement) {
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ —Å—Ç–∏–ª–∏
                flagElement.style.transform = 'translateY(0)';
                
                // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–ª–∞–≥ –∏ –ø—Ä–∏–º–µ–Ω—è–µ–º –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—É—é –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫—É –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
                const flag = flagElement.textContent;
                
                // –û—Å–æ–±—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö —Ñ–ª–∞–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ –∏–¥–µ–∞–ª—å–Ω–æ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã
                if (flag === 'üá∑üá∫' || flag === 'üá∫üá¶' || flag === 'üá¨üáß' || 
                    flag === 'üá©üá™' || flag === 'üá™üá∏' || flag === 'üáµüáπ' || flag === 'üáØüáµ') {
                    // –ú–µ–ª–∫–∏–µ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∏ –ø–æ–ª–æ–∂–µ–Ω–∏—è –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
                    flagElement.style.transform = 'translateY(0)';
                }
            }
        };
        
        // –í—ã–∑—ã–≤–∞–µ–º —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏
        centerFlag();
        
        // –°–æ–∑–¥–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é —è–∑—ã–∫–æ–≤
        const dropdownContent = document.createElement('div');
        dropdownContent.className = 'language-dropdown-content';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —è–∑—ã–∫–∏ –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é
        languages.forEach(lang => {
            const langItem = document.createElement('button');
            langItem.className = 'language-item';
            langItem.setAttribute('data-lang', lang.code);
            langItem.innerHTML = `${lang.flag} <span>${lang.name}</span>`;
            
            // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ñ—Ñ–µ–∫—Ç —Ö–æ–≤–µ—Ä–∞
            langItem.addEventListener('mouseover', () => {
                langItem.style.transform = 'translateX(3px)';
            });
            
            langItem.addEventListener('mouseout', () => {
                langItem.style.transform = 'translateX(0)';
            });
            
            langItem.addEventListener('click', () => {
                if (lang.code !== currentLanguage) {
                    translatePage(lang.code);
                    
                    // –î–æ–±–∞–≤–∏–º –Ω–µ–±–æ–ª—å—à—É—é –∞–Ω–∏–º–∞—Ü–∏—é –ø—Ä–∏ –∫–ª–∏–∫–µ
                    langItem.style.transform = 'scale(0.95)';
                    setTimeout(() => {
                        langItem.style.transform = 'scale(1)';
                    }, 100);
                    
                    // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ñ–ª–∞–≥ –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                    setTimeout(centerFlag, 150);
                }
                
                setTimeout(() => {
                    dropdownContent.classList.remove('show');
                }, 300);
            });
            
            if (lang.code === currentLanguage) {
                langItem.classList.add('active');
            }
            
            dropdownContent.appendChild(langItem);
        });
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –≤–∏–¥–∏–º–æ—Å—Ç—å –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∫–Ω–æ–ø–∫—É
        langButton.addEventListener('click', (e) => {
            e.stopPropagation();
            dropdownContent.classList.toggle('show');
            
            // –ê–Ω–∏–º–∞—Ü–∏—è –∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –∫–ª–∏–∫–µ
            langButton.style.transform = 'scale(0.9)';
            setTimeout(() => {
                langButton.style.transform = '';
            }, 150);
        });
        
        // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
        document.addEventListener('click', (e) => {
            if (!langButton.contains(e.target) && !dropdownContent.contains(e.target)) {
                dropdownContent.classList.remove('show');
            }
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ DOM
        langContainer.appendChild(langButton);
        langContainer.appendChild(dropdownContent);
        navbar.appendChild(langContainer);
        
        // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ñ–ª–∞–≥ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ä–∞–∑–º–µ—Ä–∞ —ç–∫—Ä–∞–Ω–∞
        window.addEventListener('resize', centerFlag);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–ª–∞–≥–∞ —Ç–µ–∫—É—â–µ–≥–æ —è–∑—ã–∫–∞
function getCurrentLanguageFlag() {
    const lang = languages.find(l => l.code === currentLanguage);
    return lang ? lang.flag : 'üåê';
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
document.addEventListener('DOMContentLoaded', () => {
    // –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å —è–∑—ã–∫–æ–≤ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏ DOM
    createLanguageSwitcher();
    
    // –ü–µ—Ä–µ–≤–æ–¥–∏–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –Ω–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –∏–ª–∏ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —è–∑—ã–∫
    translatePage(currentLanguage);
}); 